#Data input
tree <- read.newick(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv")
#check and re-order data
ReorderData(tree, stepData, taxa.names=1)
name.check(tree, stepData, data.names=NULL)
rm(list=ls())
## load packages
require(phytools)
require(nlme)
require(MASS)
require(geiger)
require(evobiR)
#Data input
tree <- read.newick(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv")
#check and re-order data
ReorderData(tree, stepData, taxa.names=1)
name.check(tree, stepData, data.names=NULL)
name.check(tree, stepData)
ages
require(ape)
require(ape)
#Data input
tree <- read.tree(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv")
#check and re-order data
ReorderData(tree, stepData, taxa.names=1)
name.check(tree, stepData)
plot(tree,no.margin=TRUE,edge.width=2)
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
#check and re-order data
ReorderData(tree, stepData, taxa.names=1)
#check and re-order data
ReorderData(tree, stepData)
name.check(tree, stepData)
View(stepData)
#check and re-order data
ReorderData(tree, stepData, taxa.names="Species")
ReorderData(tree, stepData, taxa.names="Species")
name.check(tree, data2, data.names=NULL)
#check and re-order data
data2 <- ReorderData(tree, stepData, taxa.names="Species")
rm(list=ls())
## load packages
require(ape)
require(phytools)
require(nlme)
require(MASS)
require(geiger)
require(evobiR)
#Data input
tree <- read.tree(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv")
#check and re-order data
data2 <- ReorderData(tree, stepData, taxa.names="Species")
name.check(tree, data2, data.names=NULL)
newphy <- drop.tip(tree, tip=data2$tree_not_data)
View(newphy)
name.check(newphy, data2)
td <- treedata(tree, stepData)
View(stepData)
stepData <- read.csv("arcfeatures2.csv", index=False)
stepData <- read.csv("arcfeatures2.csv"(index=False))
stepData <- read.csv("arcfeatures2.csv"(index=False))
stepData <- read.csv("arcfeatures2.csv", index=False)
stepData <- read.csv("arcfeatures2.csv", index=False)
td <- treedata(tree, data2)
rm(list=ls())
stepData <- read.csv("arcfeatures2.csv", rownames = 1)
stepData <- read.csv("arcfeatures2.csv", rownames =[1] )
## load packages
require(ape)
require(phytools)
require(nlme)
require(MASS)
require(geiger)
require(evobiR)
#Data input
tree <- read.tree(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv", rownames =[1] )
stepData <- read.csv("arcfeatures2.csv", row.names =[1] )
stepData <- read.csv("arcfeatures2.csv", row.names =[1] )
stepData <- read.csv("arcfeatures2.csv", row.names =1)
View(stepData)
tree <- read.tree(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv", row.names =1)
#check and re-order data
data2 <- ReorderData(tree, stepData, taxa.names="Species")
td <- treedata(tree, data2)
TD
td
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=td$data ,correlation=corBrownian(1,td$phy),method="ML")
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=td$data ,correlation=corBrownian(1,td$phy),method="ML")
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
fit<-stepAIC(obj,direction="both",trace=0)
fit
arcData <- read.csv("arcfeatures2.csv")
rm(list=ls())
library(ape)
library(nlme)
library(geiger)
arcData <- read.csv("arcfeatures2.csv", row.names = 1)
arcTree <- read.tree("arcorthocleaned.tre")
name.check(arcTree,arcData)
arcData <- read.csv("arcfeatures3postdrop.csv.csv", row.names = 1)
arcData <- read.csv("arcfeatures3postdrop.csv.csv", row.names = 1)
arcData <- read.csv("arcfeatures.csv", row.names = 1)
arcTree <- read.tree("arcorthocleaned.tre")
name.check(arcTree,arcData)
arcData <- read.csv("arcfeatures3postdrop.csv", row.names = 1)
arcTree <- read.tree("arcorthocleaned.tre")
name.check(arcTree,arcData)
arcData <- read.csv("arcfeatures3postdrop.csv", row.names = 1)
arcTree <- read.tree("arcorthocleaned.tre")
name.check(arcTree,arcData)
name.check(arcTree,arcData)
td <- treedata(arcTree, arcData)
bm
bm<-corBrownian(1, arbol.cortado)
bm <- corBrownian(1, arbol.cortado)
bm <- corBrownian(1, td)
bm <- corBrownian(1, td$phy)
bm
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = td$data, lambda='ML')
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = td$data, correlation = bm)
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = as.data.frame(td$data), correlation = bm)
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = as.data.frame(td$data), correlation = bm)
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = as.data.frame(td$data), correlation = corPagel(1, td)
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = as.data.frame(td$data), correlation = corPagel(1, td))
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = td$data, correlation = corPagel(1, td))
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = td$data, correlation = corPagel(1, td))
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = td$data, correlation = corPagel(1, td$phy))
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = as.data.frame(td$data), correlation = corPagel(1, td$phy))
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = as.data.frame(td$data), correlation = corPagel(1, td$phy))
arcData <- read.csv("arcfeatures3postdrop.csv", row.names = 1)
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
td <- treedata(arcTree, arcData)
bm <- corBrownian(1, td$phy)
bm
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData, correlation = corPagel(1, arcTree))
summary(model_pgls)
td <- treedata(arcTree, arcData)
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData, correlation = corPagel(1, arcTree))
library(ape)
library(nlme)
library(geiger)
arcData <- read.csv("arcfeatures3postdrop.csv", row.names = 1)
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
td <- treedata(arcTree, arcData)
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData, correlation = corPagel(1, arcTree))
summary(model_pgls)
rm=ls()
rm(list=ls())
(list=ls())
rm(list=ls())
library(ape)
library(nlme)
library(geiger)
arcData <- read.csv("arcfeatures3postdrop.csv", row.names = 1)
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
td <- treedata(arcTree, arcData)
model_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData, correlation = corPagel(1, arcTree))
summary(model_pgls)
bacData <- read.csv("bacfeatures2.csv", row.names = 1)
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted"
bacData <- read.csv("bacfeatures2.csv", row.names = 1)
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bacmodel_pgls<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = bacData, correlation = corPagel(1, bacTree))
summary(bacmodel_pgls)
bacData <- read.csv("bacdataset.csv.csv", row.names = 1)
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bacmodel_pgls<-gls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bacData, correlation = corPagel(1, bacTree))
summary(bacmodel_pgls)
bacmodel_pgls<-gls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bacData, correlation = corPagel(1, bacTree))
td <- treedata(bacTree, bacData)
bacData <- read.csv("bacdataset.csv", row.names = 1)
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
td <- treedata(bacTree, bacData)
bacData <- read.csv("bacdataset.csv", row.names = 1)
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
td <- treedata(bacTree, bacData)
bacData <- as.data.frame(td$data)
bacTree <- td$phy
bacData <- read.csv("bacdataset.csv", row.names = 1)
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
View(bacData)
bacData <- read.csv("bacfeatures2.csv", row.names = 1)
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
td <- treedata(bacTree, bacData)
bacData <- as.data.frame(td$data)
bacTree <- td$phy
bacmodel_pgls<-gls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bacData, correlation = corPagel(1, bacTree))
summary(bacmodel_pgls)
caperbacData <- read.csv("bacfeatures2.csv")
caperbacTree <- read.tree("ncbibacrootedbetteroutgroup.tre")
caperbac <- comparative.data(phy = caperarcTree, data = caperarcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
caperbacmodel_pgls <- pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = caperbac, lambda='ML')
summary(caperbacmodel_pgls)
library(ape)
library(nlme)
library(geiger)
library(caper)
library(phylolm)
caperbacData <- read.csv("bacfeatures2.csv")
caperbacTree <- read.tree("ncbibacrootedbetteroutgroup.tre")
caperbac <- comparative.data(phy = caperarcTree, data = caperarcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
caperbacmodel_pgls <- pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = caperbac, lambda='ML')
summary(caperbacmodel_pgls)
caperbacData <- read.csv("bacfeatures2.csv")
caperbacTree <- read.tree("ncbibacrootedbetteroutgroup.tre")
caperbac <- comparative.data(phy = caperbacTree, data = caperbacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
caperbacmodel_pgls <- pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = caperbac, lambda='ML')
summary(caperbacmodel_pgls)
caperbacTree <- read.tree("ncbibacrootedbetteroutgroup.tre")
caperbacData <- read.csv("bacfeatures2.csv")
caperbacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
caperbac <- comparative.data(phy = caperbacTree, data = caperbacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
caperbacmodel_pgls <- pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = caperbac, lambda='ML')
summary(caperbacmodel_pgls)
## load packages
require(ape)
require(phytools)
require(nlme)
require(MASS)
require(geiger)
require(evobiR)
#Data input
tree <- read.tree(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures3postdrop.csv", row.names =1)
data2 <- ReorderData(tree, stepData, taxa.names="Species")
td <- treedata(tree, data2)
#check and re-order data
data2 <- ReorderData(tree, stepData, taxa.names="Species")
td <- treedata(tree, data2)
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
## run stepwise AIC (using MASS & nlme)
fit<-stepAIC(obj,direction="both",trace=0)
fit
fit<-step(obj,direction="both",trace=0)
obj<- gls(OGT ~ ., data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<- gls(OGT ~ . , data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
require(caper)
caperarcData <- read.csv("arcfeatures3postdrop.csv")
caperarcTree <- read.tree("arcorthocleanedpostdrop.tre")
caperarc <- comparative.data(phy = caperarcTree, data = caperarcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
capermodel_pgls<-pgls(OGT ~ . , data = caperarc, lambda='ML')
PredictorVariables <- paste(caperarcData, sep="")
Formula <- formula(paste("OGT ~ ", paste(PredictorVariables, collapse=" + ")))
Formula
View(caperarcData)
capermodel_pgls <- pgls(OGT ~ c(4:174), data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ c(4:174), data = caperarcData, lambda='ML')
capermodel_pgls <- pgls(OGT ~ c(4:174), data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-Species,Domain,OGT , data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-'Species','Domain','OGT' , data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-'Species','Domain','OGT' , data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-'Species''Domain''OGT' , data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-["Species","Domain","OGT" , data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-"Species","Domain","OGT" , data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-Species-Domain-OGT, data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-"Species"-"Domain"-"OGT", data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ .-"Species"-"Domain"-"OGT", data = caperarc, lambda='ML')
capermodel_pgls <- pgls(OGT ~ ., data = caperarc, lambda='ML')
View(caperarc)
View(caperarc)
capermodel_pgls <- pgls(OGT ~ . - Species - Domain - OGT, data = caperarc, lambda='ML')
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<- gls(OGT ~ . - Species - Domain - OGT, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<- gls(OGT ~ . - Domain - OGT, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
View(bacData)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<- gls(OGT ~ . - Domain - OGT - ATG - TGG, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
## run stepwise AIC (using
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
## build model (using nlme)
#obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<- gls(OGT ~ . - Domain - OGT - ATG - TGG, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
View(obj)
obj<- gls(OGT ~ . - Domain - OGT - ATG - TGG, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<- gls(OGT ~ . - Domain - OGT - ATG - TGG, data=data2 ,correlation=corBrownian(1,td$phy),method="ML")
obj<- lm(OGT ~ . - Domain - OGT - ATG - TGG, data=data2)
str(data2)
View(data2)
str(data2)
rm(list=ls())
obj<- lm(OGT ~ . - Domain - OGT - ATG - TGG, data=stepData)
## load packages
require(ape)
require(phytools)
require(nlme)
require(MASS)
require(geiger)
require(evobiR)
require(caper)
#Data input
tree <- read.tree(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures3postdrop.csv", row.names =1)
obj<- lm(OGT ~ . - Domain - OGT - ATG - TGG, data=stepData)
View(stepData)
contrasts
source('~/code/pgls/crossval_R.r')
library(caper)
library(phylolm)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species')
model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG +
Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile +
S_GC, data = arc, lambda='ML')
model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
starting.value = NULL, measurement_error = FALSE, boot = 0,
full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
warnings()
arcData <- read.csv("arcfeatures2.csv", row.names = 1)
model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
starting.value = NULL, measurement_error = FALSE, boot = 0,
full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData[index],notOGTs), arcTree)
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData[row.names()],notOGTs), arcTree)
rmlist=ls()
rm(list=ls())
#library(caper)
library(phylolm)
#arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
#arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species')
#model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
arcData <- read.csv("arcfeatures2.csv", row.names = 1)
model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
starting.value = NULL, measurement_error = FALSE, boot = 0,
full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
source('~/code/pgls/crossval_R.r')
#library(caper)
library(phylolm)
#arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
#arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species')
#model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
arcData <- read.csv("arcfeatures2.csv", row.names = 1)
model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
starting.value = NULL, measurement_error = FALSE, boot = 0,
full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
#arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species')
#model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
#arcData <- read.csv("arcfeatures2.csv", row.names = 1)
model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
starting.value = NULL, measurement_error = FALSE, boot = 0,
full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
warnings()
library(caper)
library(phylolm)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species')
model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
arcData <- read.csv("arcfeatures2.csv", row.names = 1)
model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
starting.value = NULL, measurement_error = FALSE, boot = 0,
full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
library(caper)
library(phylolm)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species')
model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
#arcData <- read.csv("arcfeatures2.csv", row.names = 1)
#model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
starting.value = NULL, measurement_error = FALSE, boot = 0,
full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
#predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
#residual <- OGTs - predictions
#res_squared <- residual ** 2
#sum_res <- sum(res_squared)
#MSE <- as.numeric(sum_res/nrow(arcData))
#RMSE <- MSE ** 0.5
#RMSE
#Stepwise selection
#stepData <- read.csv("arcfeatures2.csv")
#stepTree <- read.caic("arcorthocleaned.tre")
library(caper)
model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
#arcData <- read.csv("arcfeatures2.csv", row.names = 1)
#model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
#                        prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
#                        AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
#                      phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
#                      starting.value = NULL, measurement_error = FALSE, boot = 0,
#                      full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda=0.001)
#arcData <- read.csv("arcfeatures2.csv", row.names = 1)
#model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
#                        prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
#                        AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
#                      phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
#                      starting.value = NULL, measurement_error = FALSE, boot = 0,
#                      full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
View(model_pgls)
logLik(model_pgls)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species')
model_pgls <- pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda=0.001)
#arcData <- read.csv("arcfeatures2.csv", row.names = 1)
#model_pgls <- phylolm(formula = OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R +
#                        prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT +
#                        AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData,
#                      phy = arcTree, model = c("lambda"), lower.bound = NULL, upper.bound = NULL,
#                      starting.value = NULL, measurement_error = FALSE, boot = 0,
#                      full.matrix = TRUE)
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
notOGTs <- arcData[c('prot_D', 'prot_G', 'prot_M', 'prot_P', 'prot_R', 'prot_S', 'prot_V', 'prot_Y',
'Genome_Dinuc_AG', 'Genome_Dinuc_GT', 'AGA', 'ATC', 'CCC', 'CCT', 'CGG', 'prot_Thermolabile',
'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, cbind(arcData['OGT'],arcData['Species'],notOGTs), arcTree)
#predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
#residual <- OGTs - predictions
#res_squared <- residual ** 2
#sum_res <- sum(res_squared)
#MSE <- as.numeric(sum_res/nrow(arcData))
#RMSE <- MSE ** 0.5
#RMSE
#Stepwise selection
#stepData <- read.csv("arcfeatures2.csv")
#stepTree <- read.caic("arcorthocleaned.tre")
warnings ()
