arcTree2 <- read.tree("rootedlggf.tre")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree2, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
summary(model_pgls)
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-arcData[c(-1,-2,-3)]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- sum_res/length(res_squared)
RMSE <- MSE ** 0.5
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
summary(model_pgls)
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-arcData[c(-1,-2,-3)]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- sum_res/length(res_squared)
RMSE <- MSE ** 0.5
RMSE
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
summary(model_pgls)
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-arcData[c(-1,-2,-3)]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- sum_res/length(res_squared)
RMSE <- MSE ** 0.5
RMSE
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
summary(model_pgls)
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-arcData[c(-1,-2,-3)]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
summary(model.pgls)
#output <- summary(model.pgls)$coefficient
#crossval(arcData, output[,1])
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-bacData[c(-1,-2,-3)]
OGTs<-bacData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
summary(model_pgls)
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-arcData[c(-1,-2,-3)]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
which(comp.dat$dropped$unmatched.rows)
View(arc)
View(arcData)
which(arcData[,1] = arc$dropped$unmatched.rows)
which(arcData[,1] == arc$dropped$unmatched.rows)
arcData[,1]
arc$dropped$unmatched.rows
View(arc)
View(arc)
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
summary(model_pgls)
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-arcData[c(-1,-2,-3)]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
summary(model.pgls)
#output <- summary(model.pgls)$coefficient
#crossval(arcData, output[,1])
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-bacData[c(-1,-2,-3)]
OGTs<-bacData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
bacTree <- read.tree("bacncbi.phy")
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("bacncbi.phy")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("ncbibacrootedbetteroutgroup.tre")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
summary(model.pgls)
#output <- summary(model.pgls)$coefficient
#crossval(arcData, output[,1])
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-bacData[c(-1,-2,-3)]
OGTs<-bacData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
#output <- summary(model.pgls)$coefficient
#crossval(arcData, output[,1])
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-bacData[c(-1,-2,-3)]
OGTs<-bacData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(bacData))
RMSE <- MSE ** 0.5
RMSE
View(bac)
View(bac)
View(bac)
nrow(bac$data)
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-arcData[c(-1,-2,-3)]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
#model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = bacData)
summary(model_pgls)
#output <- summary(model.pgls)$coefficient
#crossval(arcData, output[,1])
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-bacData[c(-1,-2,-3)]
OGTs<-bacData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(bac$data))
RMSE <- MSE ** 0.5
RMSE
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
#model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
model_pgls<-lm(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bacData, lambda='ML')
summary(model_pgls)
#output <- summary(model.pgls)$coefficient
#crossval(arcData, output[,1])
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-bacData[c(-1,-2,-3)]
OGTs<-bacData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(bac$data))
RMSE <- MSE ** 0.5
RMSE
library(caper)
bacData <- read.csv("bacfeatures2.csv")
bacTree <- read.tree("neobacreduced3aligned.faa.contree.rooted")
bac <- comparative.data(phy = bacTree, data = bacData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bac, lambda='ML')
#model_pgls<-lm(OGT ~ prot_F + prot_G + prot_I + prot_L + prot_M + prot_P + prot_R + prot_S + prot_T + prot_V + prot_W + prot_Y + Genome_Dinuc_AC + Genome_Dinuc_AG + Genome_Dinuc_AT + Genome_Dinuc_CG, data = bacData, lambda='ML')
summary(model_pgls)
#output <- summary(model.pgls)$coefficient
#crossval(arcData, output[,1])
output <- summary(model_pgls)$coefficient
#crossval(arcData, output[,1])
notOGTs <-bacData[c(-1,-2,-3)]
OGTs<-bacData[c(3)]
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(bac$data))
RMSE <- MSE ** 0.5
RMSE
source('~/gitcode/code/pgls/crossval_R.r')
crossval(arcData, output[,1])
source('~/gitcode/code/pgls/crossval_R.r')
crossval(arcData, output[,1])
warnings()
source('~/gitcode/code/pgls/crossval_R.r')
crossval(arcData, output[,1])
source('~/gitcode/code/pgls/crossval_R.r')
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
summary(model_pgls)
output <- summary(model_pgls)$coefficient
output
notOGTs <- notOGTs1[c(prot_D , prot_G , prot_M , prot_P , prot_R , prot_S , prot_V , prot_Y , Genome_Dinuc_AG , Genome_Dinuc_GT , AGA , ATC , CCC , CCT , CGG , prot_Thermolabile , S_GC)]
notOGTs1 <-arcData[c(-1,-2,-3)]
notOGTs <- notOGTs1[c(prot_D , prot_G , prot_M , prot_P , prot_R , prot_S , prot_V , prot_Y , Genome_Dinuc_AG , Genome_Dinuc_GT , AGA , ATC , CCC , CCT , CGG , prot_Thermolabile , S_GC)]
notOGTs1 <-arcData[c(-1,-2,-3)]
notOGTs <- notOGTs1[c('prot_D' , 'prot_G' , 'prot_M' , 'prot_P' , 'prot_R' , 'prot_S' , 'prot_V' , 'prot_Y' , 'Genome_Dinuc_AG' , 'Genome_Dinuc_GT' , 'AGA' , 'ATC' , 'CCC' , 'CCT' , 'CGG' , 'prot_Thermolabile' , 'S_GC')]
OGTs<-arcData[c(3)]
predictions <- predict(model_pgls, notOGTs)
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
output <- summary(model_pgls)$coefficient
output
source('~/gitcode/code/pgls/crossval_R.r')
crossval(OGTs, notOGTs, output[,1])
source('~/gitcode/code/pgls/crossval_R.r')
crossval(OGTs, notOGTs, output[,1])
source('~/gitcode/code/pgls/crossval_R.r')
crossval(OGTs, notOGTs, output[,1])
OGTs
OGTs[1]
source('~/gitcode/code/pgls/crossval_R.r')
crossval(OGTs, notOGTs, output[,1])
as.vector(OGTs)[1]
typeof(OGTs)
OGTS[1,]
OGTs[1,]
source('~/gitcode/code/pgls/crossval_R.r')
crossval(OGTs, notOGTs, output[,1])
source('~/gitcode/code/pgls/crossval_R.r')
crossval(OGTs, notOGTs, arc)
source('~/gitcode/code/pgls/crossval_R.r')
crossval(OGTs, notOGTs, arc)
#Data input
tree <- read.newick(file="arcorthocleaned.tre")
## load packages
require(phytools)
require(nlme)
require(MASS)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML"))
## load packages
require(phytools)
require(nlme)
require(MASS)
#Data input
tree <- read.newick(file="arcorthocleaned.tre")
stepData <- read.csv("arcfeatures2.csv")
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
rm(list=ls())
## load packages
require(phytools)
require(nlme)
require(MASS)
#Data input
tree <- read.newick(file="arcorthocleaned.tre")
stepData <- read.csv("arcfeatures2.csv")
View(tree)
obj<-gls(OGT ~ prot_D + pro
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
View(arc)
arc[["dropped"]][["tips"]]
## load packages
require(phytools)
require(nlme)
require(MASS)
#Data input
tree <- read.newick(file="arcorthocleaned.tre")
stepData <- read.csv("arcfeatures2.csv")
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
rm(list=ls())
## load packages
require(phytools)
require(nlme)
require(MASS)
#Data input
tree <- read.newick(file="arcorthocleaned.tre")
stepData <- read.csv("arcfeatures2.csv")
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
## load packages
require(phytools)
require(nlme)
require(MASS)
#Data input
tree <- read.newick(file="arcorthocleaned.tre")
stepData <- read.csv("arcfeatures2.csv")
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
#Data input
tree <- read.newick(file="arcorthocleanedpostdrop.tre")
## load packages
require(phytools)
require(nlme)
require(MASS)
#Data input
tree <- read.newick(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv")
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleanedpostdrop.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
View(arc)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
rm(list=ls())
## load packages
require(phytools)
require(nlme)
require(MASS)
#Data input
tree <- read.newick(file="arcorthocleanedpostdrop.tre")
stepData <- read.csv("arcfeatures2.csv")
## build model (using nlme)
obj<-gls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data=stepData ,correlation=corBrownian(1,tree),method="ML")
View(obj)
## run stepwise AIC (using MASS & nlme)
fit<-stepAIC(obj,direction="both",trace=0)
warnings()
fit
source('~/code/pgls/crossval_R.r')
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
output <- summary(model_pgls)$coefficient
notOGTs1 <-arcData[c(-1,-2,-3)]
notOGTs <- notOGTs1[c('prot_D' , 'prot_G' , 'prot_M' , 'prot_P' , 'prot_R' , 'prot_S' , 'prot_V' , 'prot_Y' , 'Genome_Dinuc_AG' , 'Genome_Dinuc_GT' , 'AGA' , 'ATC' , 'CCC' , 'CCT' , 'CGG' , 'prot_Thermolabile' , 'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, arc)
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
rm(list=ls())
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
output <- summary(model_pgls)$coefficient
notOGTs1 <-arcData[c(-1,-2,-3)]
notOGTs <- notOGTs1[c('prot_D' , 'prot_G' , 'prot_M' , 'prot_P' , 'prot_R' , 'prot_S' , 'prot_V' , 'prot_Y' , 'Genome_Dinuc_AG' , 'Genome_Dinuc_GT' , 'AGA' , 'ATC' , 'CCC' , 'CCT' , 'CGG' , 'prot_Thermolabile' , 'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, arc)
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
source('~/code/pgls/crossval_R.r')
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, arc)
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
library(caper)
arcData <- read.csv("arcfeatures2.csv")
arcTree <- read.tree("arcorthocleaned.tre")
arc <- comparative.data(phy = arcTree, data = arcData, names.col = 'Species',vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model_pgls<-pgls(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arc, lambda='ML')
#model_pgls<-lm(OGT ~ prot_D + prot_G + prot_M + prot_P + prot_R + prot_S + prot_V + prot_Y + Genome_Dinuc_AG + Genome_Dinuc_GT + AGA + ATC + CCC + CCT + CGG + prot_Thermolabile + S_GC, data = arcData)
summary(model_pgls)
output <- summary(model_pgls)$coefficient
notOGTs1 <-arcData[c(-1,-2,-3)]
notOGTs <- notOGTs1[c('prot_D' , 'prot_G' , 'prot_M' , 'prot_P' , 'prot_R' , 'prot_S' , 'prot_V' , 'prot_Y' , 'Genome_Dinuc_AG' , 'Genome_Dinuc_GT' , 'AGA' , 'ATC' , 'CCC' , 'CCT' , 'CGG' , 'prot_Thermolabile' , 'S_GC')]
OGTs<-arcData[c(3)]
crossval(OGTs, notOGTs, arc)
predictions <- predict(model_pgls, notOGTs)
#mean((OGTs - predictions)**2)**0.5
residual <- OGTs - predictions
res_squared <- residual ** 2
sum_res <- sum(res_squared)
MSE <- as.numeric(sum_res/nrow(arcData))
RMSE <- MSE ** 0.5
RMSE
crossval(OGTs, notOGTs, arcData)
